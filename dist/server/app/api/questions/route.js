"use strict";(()=>{var e={};e.id=1330,e.ids=[1330],e.modules={30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},14300:e=>{e.exports=require("buffer")},57147:e=>{e.exports=require("fs")},13685:e=>{e.exports=require("http")},95687:e=>{e.exports=require("https")},87561:e=>{e.exports=require("node:fs")},84492:e=>{e.exports=require("node:stream")},71017:e=>{e.exports=require("path")},85477:e=>{e.exports=require("punycode")},12781:e=>{e.exports=require("stream")},71576:e=>{e.exports=require("string_decoder")},57310:e=>{e.exports=require("url")},73837:e=>{e.exports=require("util")},71267:e=>{e.exports=require("worker_threads")},59796:e=>{e.exports=require("zlib")},19827:(e,t,r)=>{r.r(t),r.d(t,{headerHooks:()=>g,originalPathname:()=>w,requestAsyncStorage:()=>m,routeModule:()=>d,serverHooks:()=>f,staticGenerationAsyncStorage:()=>h,staticGenerationBailout:()=>q});var o={};r.r(o),r.d(o,{POST:()=>POST}),r(95655);var n=r(83323),s=r(54647),a=r(3104);let i=new a.ZP({apiKey:process.env.OPENAI_API_KEY});async function strict_output(e,t,r,o="",n=!1,s="gpt-3.5-turbo",a=1,u=3,p=!1){let l=Array.isArray(t),c=/<.*?>/.test(JSON.stringify(r)),d=/\[.*?\]/.test(JSON.stringify(r)),m="";for(let h=0;h<u;h++){let u=`
You are to output the following in json format: ${JSON.stringify(r)}. 
Do not put quotation marks or escape character \\ in the output fields.`;d&&(u+=`
If output field is a list, classify output into the best element of the list.`),c&&(u+=`
Any text enclosed by < and > indicates you must generate content to replace it. Example input: Go to <location>, Example output: Go to the garden
Any output key containing < and > indicates you must generate the key name to replace it. Example input: {'<location>': 'description of location'}, Example output: {school: a place for education}`),l&&(u+=`
Generate a list of json, one json for each input element.`);let h=await i.chat.completions.create({temperature:a,model:s,messages:[{role:"system",content:e+u+m},{role:"user",content:t.toString()}]}),f=h.choices[0].message?.content?.replace(/'/g,'"')??"";f=f.replace(/(\w)"(\w)/g,"$1'$2"),p&&(console.log("System prompt:",e+u+m),console.log("\nUser prompt:",t),console.log("\nGPT response:",f));try{let e=JSON.parse(f);if(l){if(!Array.isArray(e))throw Error("Output format not in a list of json")}else e=[e];for(let t=0;t<e.length;t++){for(let n in r)if(!/<.*?>/.test(n)){if(!(n in e[t]))throw Error(`${n} not in json output`);if(Array.isArray(r[n])){let s=r[n];Array.isArray(e[t][n])&&(e[t][n]=e[t][n][0]),!s.includes(e[t][n])&&o&&(e[t][n]=o),e[t][n].includes(":")&&(e[t][n]=e[t][n].split(":")[0])}}n&&(e[t]=Object.values(e[t]),1===e[t].length&&(e[t]=e[t][0]))}return l?e:e[0]}catch(e){m=`

Result: ${f}

Error message: ${e}`,console.log("An exception occurred:",e),console.log("Current invalid json format:",f)}}return[]}var u=r(98740),p=r(66886),l=r(45952);async function POST(e,t){try{let t;let r=await e.json(),{amount:o,topic:n,type:s}=u.dq.parse(r);return"open_ended"===s?t=await strict_output("You are a helpful AI that is able to generate a pair of question and answers, the length of each answer should not be more than 15 words, store all the pairs of answers and questions in a JSON array",Array(o).fill(`You are to generate a random hard open-ended questions about ${n}`),{question:"question",answer:"answer with max length of 15 words"}):"mcq"===s&&(t=await strict_output("You are a helpful AI that is able to generate mcq questions and answers, the length of each answer should not be more than 15 words, store all answers and questions and options in a JSON array",Array(o).fill(`You are to generate a random hard mcq question about ${n}`),{question:"question",answer:"answer with max length of 15 words",option1:"option1 with max length of 15 words",option2:"option2 with max length of 15 words",option3:"option3 with max length of 15 words"})),p.Z.json({questions:t},{status:200})}catch(e){if(e instanceof l.jm)return p.Z.json({error:e.issues},{status:400});return console.error("elle gpt error",e),p.Z.json({error:"An unexpected error occurred."},{status:500})}}let c=n.AppRouteRouteModule,d=new c({definition:{kind:s.x.APP_ROUTE,page:"/api/questions/route",pathname:"/api/questions",filename:"route",bundlePath:"app/api/questions/route"},resolvedPagePath:"/Users/zeds/Documents/Coding/ANDELA/Projects/quizmify/src/app/api/questions/route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:m,staticGenerationAsyncStorage:h,serverHooks:f,headerHooks:g,staticGenerationBailout:q}=d,w="/api/questions/route"},98740:(e,t,r)=>{r.d(t,{dq:()=>n,in:()=>s});var o=r(45952);let n=o.z.object({topic:o.z.string(),amount:o.z.number().int().positive().min(1).max(10),type:o.z.enum(["mcq","open_ended"])}),s=o.z.object({userInput:o.z.string(),questionId:o.z.string()});o.z.object({gameId:o.z.string()})}};var t=require("../../../webpack-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),r=t.X(0,[7395,9506,9727,4467,804,3104],()=>__webpack_exec__(19827));module.exports=r})();